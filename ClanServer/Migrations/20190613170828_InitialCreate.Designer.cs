// <auto-generated />
using System;
using ClanServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClanServer.Migrations
{
    [DbContext(typeof(ClanServerContext))]
    [Migration("20190613170828_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("ClanServer.Models.Card", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardId")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("DataId")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<int>("PlayerID");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.HasKey("ID");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.HasIndex("DataId");

                    b.HasIndex("PlayerID");

                    b.HasIndex("RefId")
                        .IsUnique();

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("ClanServer.Models.JubeatClanJubility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsHardMode");

                    b.Property<int>("MusicID");

                    b.Property<int>("ProfileID");

                    b.Property<int>("Score");

                    b.Property<sbyte>("Seq");

                    b.Property<int>("Value");

                    b.HasKey("ID");

                    b.HasIndex("ProfileID");

                    b.ToTable("JubeatClanJubility");
                });

            modelBuilder.Entity("ClanServer.Models.JubeatClanProfileData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BeatCount");

                    b.Property<bool>("BonusTunePlayed");

                    b.Property<int>("BonusTunePoints");

                    b.Property<int>("ClearCount");

                    b.Property<int>("ExCount");

                    b.Property<int>("FcCount");

                    b.Property<short>("HouseNo1");

                    b.Property<short>("HouseNo2");

                    b.Property<int>("JboxPoints");

                    b.Property<int>("JubilityParam");

                    b.Property<int>("MatchCount");

                    b.Property<int>("PlayTime");

                    b.Property<int>("ProfileID");

                    b.Property<int>("SaveCount");

                    b.Property<int>("SavedCount");

                    b.Property<int>("Section");

                    b.Property<int>("Street");

                    b.Property<byte>("Team");

                    b.Property<int>("TuneCount");

                    b.HasKey("ID");

                    b.HasIndex("ProfileID")
                        .IsUnique();

                    b.ToTable("JubeatClanProfileData");
                });

            modelBuilder.Entity("ClanServer.Models.JubeatClanSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<sbyte>("Category");

                    b.Property<sbyte>("ComboDisplay");

                    b.Property<short>("EmblemBackground");

                    b.Property<short>("EmblemBalloon");

                    b.Property<short>("EmblemEffect");

                    b.Property<short>("EmblemMain");

                    b.Property<short>("EmblemOrnament");

                    b.Property<sbyte>("ExpertOption");

                    b.Property<sbyte>("Hard");

                    b.Property<sbyte>("Hazard");

                    b.Property<sbyte>("Marker");

                    b.Property<sbyte>("Matching");

                    b.Property<short>("Parts");

                    b.Property<int>("ProfileID");

                    b.Property<sbyte>("RankSort");

                    b.Property<sbyte>("Sort");

                    b.Property<sbyte>("Theme");

                    b.Property<short>("Title");

                    b.HasKey("ID");

                    b.HasIndex("ProfileID")
                        .IsUnique();

                    b.ToTable("JubeatClanSettings");
                });

            modelBuilder.Entity("ClanServer.Models.JubeatHighscore", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Bar")
                        .HasMaxLength(30);

                    b.Property<sbyte>("Clear");

                    b.Property<int>("ClearCount");

                    b.Property<int>("ExcCount");

                    b.Property<int>("FcCount");

                    b.Property<int>("MusicID");

                    b.Property<int>("PlayCount");

                    b.Property<int>("ProfileID");

                    b.Property<int>("Score");

                    b.Property<sbyte>("Seq");

                    b.Property<long>("Timestamp");

                    b.HasKey("ID");

                    b.HasIndex("ProfileID");

                    b.HasIndex("MusicID", "Seq");

                    b.HasIndex("ProfileID", "MusicID");

                    b.HasIndex("ProfileID", "MusicID", "Seq")
                        .IsUnique();

                    b.ToTable("JubeatHighscores");
                });

            modelBuilder.Entity("ClanServer.Models.JubeatProfile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("PlayerID");

                    b.HasKey("ID");

                    b.HasIndex("PlayerID")
                        .IsUnique();

                    b.ToTable("JubeatProfiles");
                });

            modelBuilder.Entity("ClanServer.Models.JubeatScore", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Bar")
                        .HasMaxLength(30);

                    b.Property<sbyte>("Clear");

                    b.Property<bool>("IsHardMode");

                    b.Property<bool>("IsHazardMode");

                    b.Property<int>("MusicID");

                    b.Property<short>("NumGood");

                    b.Property<short>("NumGreat");

                    b.Property<short>("NumMiss");

                    b.Property<short>("NumPerfect");

                    b.Property<short>("NumPoor");

                    b.Property<int>("ProfileID");

                    b.Property<int>("Score");

                    b.Property<sbyte>("Seq");

                    b.Property<long>("Timestamp");

                    b.HasKey("ID");

                    b.HasIndex("ProfileID");

                    b.HasIndex("MusicID", "Seq");

                    b.HasIndex("ProfileID", "MusicID");

                    b.HasIndex("ProfileID", "MusicID", "Seq");

                    b.ToTable("JubeatScores");
                });

            modelBuilder.Entity("ClanServer.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Passwd");

                    b.HasKey("ID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ClanServer.Models.Card", b =>
                {
                    b.HasOne("ClanServer.Models.Player", "Player")
                        .WithMany("Cards")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClanServer.Models.JubeatClanJubility", b =>
                {
                    b.HasOne("ClanServer.Models.JubeatProfile", "Profile")
                        .WithMany("Jubilitys")
                        .HasForeignKey("ProfileID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClanServer.Models.JubeatClanProfileData", b =>
                {
                    b.HasOne("ClanServer.Models.JubeatProfile", "Profile")
                        .WithOne("ClanData")
                        .HasForeignKey("ClanServer.Models.JubeatClanProfileData", "ProfileID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClanServer.Models.JubeatClanSettings", b =>
                {
                    b.HasOne("ClanServer.Models.JubeatProfile", "Profile")
                        .WithOne("ClanSettings")
                        .HasForeignKey("ClanServer.Models.JubeatClanSettings", "ProfileID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClanServer.Models.JubeatHighscore", b =>
                {
                    b.HasOne("ClanServer.Models.JubeatProfile", "Profile")
                        .WithMany("Highscores")
                        .HasForeignKey("ProfileID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClanServer.Models.JubeatProfile", b =>
                {
                    b.HasOne("ClanServer.Models.Player", "Player")
                        .WithOne("JubeatProfile")
                        .HasForeignKey("ClanServer.Models.JubeatProfile", "PlayerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClanServer.Models.JubeatScore", b =>
                {
                    b.HasOne("ClanServer.Models.JubeatProfile", "Profile")
                        .WithMany("Scores")
                        .HasForeignKey("ProfileID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
